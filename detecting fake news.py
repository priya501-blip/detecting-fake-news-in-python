# -*- coding: utf-8 -*-
"""Untitled12.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1S9gA23fqgIkyVGK11tgZVRd1nanv-kJa
"""

# Import necessary libraries
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix
import nltk
nltk.download('stopwords')
from nltk.corpus import stopwords

data = {
    'text': [
        "The government is planning to introduce a new tax law next month.",
        "Scientists have discovered an alien life form in the vicinity of Mars!",
        "The stock market saw a significant drop after the Fed's announcement of rate hikes.",
        "Rumors about a celebrity divorce are circulating on social media today.",
        "The economy is recovering after the pandemic."
    ],
    'label': [0, 1, 0, 1, 0]  # 0 = Real, 1 = Fake
}

df = pd.DataFrame(data)

stop_words = stopwords.words('english')
def preprocess(text):
    text = text.lower()
    text = ' '.join([word for word in text.split() if word not in stop_words])
    return text

df['processed_text'] = df['text'].apply(preprocess)

X = df['processed_text']
y = df['label']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

vectorizer = TfidfVectorizer(max_features=5000)
X_train_tfidf = vectorizer.fit_transform(X_train)
X_test_tfidf = vectorizer.transform(X_test)

model = LogisticRegression()
model.fit(X_train_tfidf, y_train)

y_pred = model.predict(X_test_tfidf)

accuracy = accuracy_score(y_test, y_pred)
cm = confusion_matrix(y_test, y_pred)

print("Accuracy:", accuracy)
print("Confusion Matrix:\n", cm)

new_data = ["The president just announced a new stimulus package!"]
new_data_processed = [preprocess(text) for text in new_data]
new_data_tfidf = vectorizer.transform(new_data_processed)

prediction = model.predict(new_data_tfidf)
print("Prediction (0 = Real, 1 = Fake):", prediction[0])